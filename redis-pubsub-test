#!/bin/bash 
# https://github.com/caquino/redis-bash
# run this file passing the channel to subscribe as argument
# ./redis-pubsub-test testchannel
# and on another shell publish a message on the same channel
# ./redis-bash-cli -h localhost PUBLISH testchannel Hello World
source /usr/share/redis-bash/redis-bash-lib 2> /dev/null
if [ $? -ne 0 ]; then
  LIBFOLDER=${0%/${0##*/}}
  source ${LIBFOLDER}/redis-bash-lib 2> /dev/null
  if [ $? -ne 0 ]; then
    echo "can't find redis-bash-lib in /usr/share/redis-bash or ${LIBFOLDER}"
    exit 127 
  fi
fi
REDISHOST=localhost
REDISPORT=6379

while getopts ":h:p:a:" opt
do
    case ${opt} in
        h) REDISHOST=${OPTARG};;
        p) REDISPORT=${OPTARG};;
        a) PASSWORD=${OPTARG};;
    esac
done
shift $((${OPTIND} - 1))
while true
do
    if [ "${REDISHOST}" != "" ] && [ "${REDISPORT}" != "" ]
    then
		declare -A CONN=( [host]="${REDISHOST}" [port]="${REDISPORT}" )
		redis_connect CONN FD || exit 1
    else
        echo "Wrong arguments"
        exit 255
    fi
	local AUTH=( [password]="$PASSWORD" )
	if [ "${PASSWORD}" != "" ]; then
		tmpname="array_${RANDOM}"
		eval "declare -A ${tmpname}"
		redis_client ${FD} "${tmpname}" AUTH "${PASSWORD}"
		if [ $? -ne 0 ]; then
			echo "AUTH command failed"
			exit 1
		fi
		unset ${!tmpname}
	fi

	tmpname="array_${RANDOM}"
	eval "declare -A ${tmpname}"
    redis_client ${FD} "${tmpname}" SUBSCRIBE ${1} # subscribe to the pubsub channel in fd ${FD}
    if [ $? -ne 0 ]; then
		redis_strval "${tmpname}" STR1
		echo "Error: SUBSCRIBE command failed: ${STR1}"
		exit 1
    fi
    redis_strval "${tmpname}" STR1 0
    redis_strval "${tmpname}" STR2 1
    if [ "${STR1}" != "subscribe" -o "${STR2}" != "${1}" ]; then
		echo "Error: subscription failed"
		exit 1
    fi
    unset ${!tmpname}
    while true
    do
		tmpname="array_${RANDOM}"
		eval "declare -A ${tmpname}"
		redis_getreply ${FD} "${tmpname}"
		redis_strval "${tmpname}" STR1 0
		redis_strval "${tmpname}" STR2 1
		if [ "${STR1}" = "message" ] && [ "${STR2}" = "${1}" ]; then
			redis_strval "${tmpname}" STR3 2
			echo "Message from pubsub channel: ${STR3}"
		fi
		unset ${!tmpname}
    done
done
