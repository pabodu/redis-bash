#!/bin/bash 
# Based on https://github.com/caquino/redis-bash
# Poor man profiling - uncoment the next 2 lines
#set -x
#PS4='$(date "+%s.%N ($LINENO) + ")'
source /usr/share/redis-bash/redis-bash-lib 2> /dev/null
if [ $? -ne 0 ]; then
  LIBFOLDER=${0%/${0##*/}}
  source ${LIBFOLDER}/redis-bash-lib 2> /dev/null
  if [ $? -ne 0 ]; then
    echo "can't find redis-bash-lib in /usr/share/redis-bash or ${LIBFOLDER}"
    exit 127 
  fi
fi
REDISHOST=localhost
REDISPORT=6379
REPEAT=1
DELAY=0
while getopts ":h:n:p:r:a:i:" opt
do
    case ${opt} in
        h) REDISHOST=${OPTARG};;
        n) REDISDB=${OPTARG};;
        p) REDISPORT=${OPTARG};;
        r) REPEAT=${OPTARG};;
        a) PASSWORD=${OPTARG};;
        i) DELAY=${OPTARG};;
    esac
done
shift $((${OPTIND} - 1))
if [ "${REDISHOST}" != "" ] && [ "${REDISPORT}" != "" ]
then
	declare -A CONN=( [host]="${REDISHOST}" [port]="${REDISPORT}" )
	redis_connect CONN FD || exit 1
else
    echo "Wrong arguments"
    exit 255
fi
AUTH=( [password]="$PASSWORD" )
if [ "${PASSWORD}" != "" ]; then
	tmpname="array_${RANDOM}"
	eval "declare -A ${tmpname}"
	redis_client ${FD} "${tmpname}" AUTH "${PASSWORD}"
	if [ $? -ne 0 ]; then
		echo "AUTH command failed"
		exit 1
	fi
fi
if [ "${REDISDB}" != "" ]; then
	tmpname="array_${RANDOM}"
	eval "declare -A ${tmpname}"
	redis_client ${FD} "${tmpname}" SELECT "${REDISDB}"
	if [ $? -ne 0 ]; then
		echo "SELECT command failed"
		exit 1
	fi
fi
if [ $# -ne 0 ]; then
	for ((z=1;z<=${REPEAT};z++)); do
		tmpname="array_${RANDOM}"
		eval "declare -A ${tmpname}"
		redis_client ${FD} "${tmpname}" "$@"
		if [ $? -ne 0 ]; then
			echo "${1} command failed"
			exit 1
		fi
		if [ "${1^^}" == "GET" ]; then
			redis_strval "${tmpname}" RES || exit 1
			echo "${RES}"
		fi
		[ ${DELAY} -gt 0 ] && sleep ${DELAY}
	done
fi

redis_disconnect ${FD}

